{"version":3,"sources":["pages/TodoList.js","pages/TodoForm.js","App.js","index.js"],"names":["TodoList","tasks","toggleCheckTask","removeTask","className","length","map","task","classOfList","color","key","id","type","checked","complete","onChange","title","descr","onClick","icon","faTrash","to","TodoForm","htmlFor","class","value","Component","App","props","toggleHandler","setState","state","removeHandler","filter","path","render","exact","component","ReactDOM","document","getElementById"],"mappings":"8SAKe,SAASA,EAAT,GAIX,IAHFC,EAGC,EAHDA,MACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,WAEA,OACE,yBAAKC,UAAU,gBACb,wBAAIA,UAAU,cACM,IAAjBH,EAAMI,OACL,4FAEAJ,EAAMK,KAAI,SAACC,GACT,IAAIC,EAAW,+EAA2ED,EAAKE,MAAhF,SACf,OACE,wBAAIC,IAAKH,EAAKI,GAAIP,UAAWI,GAC3B,2BAAOJ,UAAU,0DACf,2BACEA,UAAU,mBACVQ,KAAK,WACLC,QAASN,EAAKO,SACdC,SAAU,kBAAMb,EAAgBK,EAAKI,OAEtCJ,EAAKS,MACN,yBAAKZ,UAAU,SAASG,EAAKU,QAE/B,4BAAQC,QAAS,kBAAMf,EAAWI,EAAKI,MACrC,kBAAC,IAAD,CAAiBQ,KAAMC,YAOnC,gCACE,kBAAC,IAAD,CAAMC,GAAG,cAAT,a,ICpCaC,E,uKAEjB,OACE,0BAAMlB,UAAU,gBACd,yBAAKA,UAAU,cACb,2BAAOmB,QAAQ,aAAf,cACA,2BAAOC,MAAM,eAAeb,GAAG,YAAYC,KAAK,UAElD,yBAAKR,UAAU,cACb,2BAAOmB,QAAQ,aAAf,oBACA,2BAAOC,MAAM,eAAeb,GAAG,YAAYC,KAAK,UAElD,yBAAKR,UAAU,cACb,2BAAOA,UAAU,OAAOmB,QAAQ,gBAAhC,2DAGA,4BAAQZ,GAAG,gBACT,4BAAQc,MAAM,UAAd,8CACA,4BAAQA,MAAM,WAAd,8CACA,4BAAQA,MAAM,WAAd,0CAGJ,gCACE,kBAAC,IAAD,CAAMJ,GAAG,iBAAT,iB,GAvB4BK,aCwEvBC,E,kDArEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA4BRC,cAAgB,SAAClB,GACf,EAAKmB,SAAS,CACZ7B,MAAO,EAAK8B,MAAM9B,MAAMK,KAAI,SAACC,GAAD,mBAAC,eACxBA,GADuB,IAE1BO,SAAUP,EAAKI,KAAOA,GAAMJ,EAAKO,SAAWP,EAAKO,iBAjCpC,EAsCnBkB,cAAgB,SAACrB,GACf,EAAKmB,SAAS,CACZ7B,MAAO,EAAK8B,MAAM9B,MAAMgC,QAAO,SAAC1B,GAAD,OAAUA,EAAKI,KAAOA,QAtCvD,EAAKoB,MAAQ,CACX9B,MAAO,CACL,CACEU,GAAI,EACJK,MAAO,aACPC,MAAO,yBACPH,UAAU,EACVL,MAAO,UAET,CACEE,GAAI,EACJK,MAAO,cACPC,MAAO,0BACPH,UAAU,EACVL,MAAO,WAET,CACEE,GAAI,EACJK,MAAO,aACPC,MAAO,yBACPH,UAAU,EACVL,MAAO,aAvBI,E,qDA4CT,IAAD,OACP,OACE,yBAAKL,UAAU,aACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,gCAAd,aACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8B,KAAK,gBACLC,OAAQ,kBACN,kBAACnC,EAAD,CACEE,gBAAiB,EAAK2B,cACtB1B,WAAY,EAAK6B,cACjB/B,MAAO,EAAK8B,MAAM9B,SAGtBmC,OAAK,IAEP,kBAAC,IAAD,CAAOF,KAAK,aAAaG,UAAWf,EAAUc,OAAK,W,GA9D7CV,aCGlBY,IAASH,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.20815088.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function TodoList({\r\n  tasks,\r\n  toggleCheckTask,\r\n  removeTask,\r\n}) {\r\n  return (\r\n    <div className=\"w-100 col-10\">\r\n      <ul className=\"list-group\">\r\n        {tasks.length === 0 ? (\r\n          <p>Список пуст</p>\r\n        ) : (\r\n          tasks.map((task) => {\r\n            let classOfList = `list-group-item d-flex justify-content-between align-items-center bg-${task.color} mb-2`;\r\n            return (\r\n              <li key={task.id} className={classOfList}>\r\n                <label className=\"form-check-label d-flex justify-content-between col-10\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    checked={task.complete}\r\n                    onChange={() => toggleCheckTask(task.id)}\r\n                  />\r\n                  {task.title}\r\n                  <div className=\"descr\">{task.descr}</div>\r\n                </label>\r\n                <button onClick={() => removeTask(task.id)}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </button>\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n      <button>\r\n        <Link to=\"/todo-form\">To form</Link>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class TodoForm extends Component {\r\n  render() {\r\n    return (\r\n      <form className=\"w-100 col-10\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"titleTask\">Title Task</label>\r\n          <input class=\"form-control\" id=\"titleTask\" type=\"text\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"descrTask\">Description Task</label>\r\n          <input class=\"form-control\" id=\"descrTask\" type=\"text\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"mr-3\" htmlFor=\"priorityTask\">\r\n            Приоритет:\r\n          </label>\r\n          <select id=\"priorityTask\">\r\n            <option value=\"danger\">Высокий</option>\r\n            <option value=\"warning\">Средний</option>\r\n            <option value=\"success\">Низкий</option>\r\n          </select>\r\n        </div>\r\n        <button>\r\n          <Link to=\"/react-ts-app\">To list</Link>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport TodoList from './pages/TodoList';\r\nimport TodoForm from './pages/TodoForm';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [\r\n        {\r\n          id: 0,\r\n          title: 'First task',\r\n          descr: 'Description First task',\r\n          complete: false,\r\n          color: 'danger',\r\n        },\r\n        {\r\n          id: 1,\r\n          title: 'Second task',\r\n          descr: 'Description Second task',\r\n          complete: false,\r\n          color: 'success',\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Third task',\r\n          descr: 'Description Third task',\r\n          complete: false,\r\n          color: 'warning',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  toggleHandler = (id) => {\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task) => ({\r\n        ...task,\r\n        complete: task.id === id ? !task.complete : task.complete,\r\n      })),\r\n    });\r\n  };\r\n\r\n  removeHandler = (id) => {\r\n    this.setState({\r\n      tasks: this.state.tasks.filter((task) => task.id !== id),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row d-flex justify-content-center h-100\">\r\n          <h5 className=\"display-4 col-12 text-center\">Todo List</h5>\r\n          <Switch>\r\n            <Route\r\n              path=\"/react-ts-app\"\r\n              render={() => (\r\n                <TodoList\r\n                  toggleCheckTask={this.toggleHandler}\r\n                  removeTask={this.removeHandler}\r\n                  tasks={this.state.tasks}\r\n                />\r\n              )}\r\n              exact\r\n            />\r\n            <Route path=\"/todo-form\" component={TodoForm} exact />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}